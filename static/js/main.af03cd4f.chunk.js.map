{"version":3,"sources":["components/Tabledata.js","components/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["CustomizedTables","useState","searchTerm","setSearchTerm","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","classes","makeStyles","table","minWidth","useStyles","temp","Data","location","count","result","Object","values","sumSalary","map","m","mergeData","filter","a1","meanOfCurrSalary","forEach","d","Number","currSalary","replace","className","type","placeholder","onChange","e","target","value","aria-current","to","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","val","toLowerCase","includes","index","Chart","data","labels","datasets","label","borderColor","borderWidth","height","width","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","App","path","Tabledata","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mi8HAyHeA,MA3Gf,WACE,IAD0B,EAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,EAAkBC,aAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAON,EAAMG,QAAQC,OAAOG,OAE9BC,KAAM,CACJC,SAAU,OANUV,CAQpBW,KAEEC,EAAiBZ,aAAW,SAACC,GAAD,MAAY,CAC5CY,KAAM,CACJ,qBAAsB,CACpBV,gBAAiBF,EAAMG,QAAQU,OAAOC,WAHrBf,CAOnBgB,KAWEC,EANYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,MAIEC,GAEZC,EAAO,GAjCiB,cAkCNC,GAlCM,IAkC5B,gCAASC,EAAT,QAASA,SACTF,EAAKE,GAAY,CACfA,WACAC,MAAOH,EAAKE,GAAYF,EAAKE,GAAUC,MAAQ,EAAG,IArCxB,8BAwC5B,IAAIC,EAASC,OAAOC,OAAON,GAEvBO,EAAYH,EAAOI,KAAI,SAACC,GAC1B,IAAIC,EAAYT,EAAKU,QAAO,SAAAC,GAAE,OAAIA,EAAGV,WAAaO,EAAEP,YAChDW,EAAmB,EAKvB,OAJAH,EAAUI,SAAQ,SAAAC,GAChBF,GAAoBG,OAAOD,EAAEE,WAAWC,QAAQ,cAAc,KAAKT,EAAEN,SAGhEU,KAMP,OACE,gCACA,qBAAKM,UAAU,+BAAf,SACA,qBAAKA,UAAU,kBAAf,SACE,uBAAMA,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBC,KAAK,SAASC,YAAY,SAASC,SAAU,SAACC,GAAO/C,EAAc+C,EAAEC,OAAOC,UACjH,wBAAQN,UAAU,0BAA0BC,KAAK,SAAjD,oBACA,oBAAGD,UAAU,kBAAkBO,eAAa,OAA5C,UAAoD,cAAC,IAAD,CAAMC,GAAI,SAAV,uBAApD,cAKJ,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOZ,UAAWxB,EAAQE,MAAOmC,aAAW,mBAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACvC,EAAA,EAAD,WACE,cAACjB,EAAD,CAAiByD,MAAM,OAAvB,sBACA,cAACzD,EAAD,CAAiByD,MAAM,OAAvB,yBAGJ,cAACC,EAAA,EAAD,UACA,eAAC7C,EAAD,WACA,eAACb,EAAD,CAAiByD,MAAM,SAAvB,UACC9B,EAAOO,QAAO,SAACyB,GACZ,MAAmB,KAAf7D,GAEO6D,EAAIlC,SAASmC,cAAcC,SAAS/D,EAAW8D,eADjDD,OACF,KAGN5B,KAAI,SAACJ,EAAQmC,GAAT,OACL,cAACjD,EAAD,UACA,cAACb,EAAD,CAAiByD,MAAM,SAAvB,SACC9B,EAAOF,UAD6BE,EAAOmC,YAThD,MAAqCnC,EAAOmC,OAc3C,cAAC9D,EAAD,CAAiByD,MAAM,OAAvB,SACI3B,EAAUC,KAAI,SAACJ,EAAQmC,GAAT,OACf,cAACjD,EAAD,UACA,cAACb,EAAD,CAAiByD,MAAM,OAAvB,SACG9B,yB,SC/BEoC,EAzEJ,WAEX,MAAoClE,mBAAS,IAA7C,mBAAmBE,GAAnB,WAEA,OACF,gCAEI,qBAAK2C,UAAU,+BAAf,SACA,qBAAKA,UAAU,kBAAf,SACE,uBAAMA,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBC,KAAK,SAASC,YAAY,SAASC,SAAU,SAACC,GAAO/C,EAAc+C,EAAEC,OAAOC,UACjH,wBAAQN,UAAU,0BAA0BC,KAAK,SAAjD,oBACA,oBAAGD,UAAU,kBAAkBO,eAAa,OAA5C,UAAoD,cAAC,IAAD,CAAMC,GAAI,IAAV,uBAApD,cAMJ,8BAQD,cAAC,IAAD,CAAKc,KAAQ,CACRC,OAAQ,CAAC,QAAS,QAAS,cAAe,WAAY,WAAY,WAClEC,SAAU,CAAC,CACPC,MAAO,cACPH,KAAM,CAAC,kBAAmB,iBAAkB,kBAAmB,kBAAmB,kBAAmB,mBACrG5D,gBAAiB,CACb,kBACA,oBACA,mBACA,qBACA,qBACA,qBAEJgE,YAAa,CACT,kBACA,kBACA,kBACA,mBACA,mBACA,mBAEJC,YAAa,KAIvBC,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAM,CACJC,aAAa,eCxCVC,MAjBf,WAIE,OACE,qBAAKpC,UAAU,MAAf,SAEE,cAAC,IAAD,UACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAI3B,UAAW4B,EAAYC,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,SAAS3B,UAAWW,YCLzBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IAEAC,SAASC,eAAe,SAI5BZ,M","file":"static/js/main.af03cd4f.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {Link} from 'react-router-dom'; \r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Data from '../EmployeeDataset.json';\r\nimport { render } from \"@testing-library/react\";\r\n\r\nfunction CustomizedTables() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n \r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      \r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst classes = useStyles();\r\n\r\nvar temp = {}\r\nfor (let{location} of Data)\r\ntemp[location] = {\r\n  location,\r\n  count: temp[location] ? temp[location].count + 1: 1\r\n}\r\n\r\nlet result = Object.values(temp);\r\n\r\nvar sumSalary = result.map((m)=> {\r\n  var mergeData = Data.filter(a1 => a1.location === m.location);\r\n  let meanOfCurrSalary = 0;\r\n  mergeData.forEach(d => {\r\n    meanOfCurrSalary += Number(d.currSalary.replace(/[^0-9\\.-]+/g,\"\"))/m.count;\r\n\r\n  })\r\n  return meanOfCurrSalary;\r\n}\r\n)\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" onChange={(e) => {setSearchTerm(e.target.value)}}/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        <a className=\"nav-link active\" aria-current=\"page\" ><Link to =\"/Chart\">ChartView</Link> </a>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n  \r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"left\">Location</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Salary</StyledTableCell> \r\n        </TableRow>\r\n        </TableHead>\r\n        <TableBody >\r\n        <StyledTableRow>\r\n        <StyledTableCell align=\"center\" key={result.index}>\r\n        {result.filter((val)=>{\r\n            if (searchTerm === \"\") {\r\n              return val\r\n            } else if (val.location.toLowerCase().includes(searchTerm.toLowerCase())){\r\n              return val\r\n            }\r\n          }).map((result, index) => (\r\n            <StyledTableRow>\r\n            <StyledTableCell align=\"center\" key={result.index}>\r\n            {result.location}\r\n            </StyledTableCell>\r\n            </StyledTableRow>\r\n            ))} </StyledTableCell>\r\n         <StyledTableCell align=\"left\">\r\n            {sumSalary.map((result, index) => (\r\n            <StyledTableRow>\r\n            <StyledTableCell align=\"left\">\r\n              {result}</StyledTableCell>    \r\n              </StyledTableRow>\r\n               ))}\r\n            </StyledTableCell> \r\n            </StyledTableRow>      \r\n      </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomizedTables;","import React from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Link} from 'react-router-dom'; \r\nimport  { useState, useEffect } from \"react\";\r\n\r\nconst Chart =()=>{\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  return(\r\n<div> \r\n  \r\n    <nav className=\"navbar navbar-light bg-light\">\r\n    <div className=\"container-fluid\">\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" onChange={(e) => {setSearchTerm(e.target.value)}}/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        <a className=\"nav-link active\" aria-current=\"page\" ><Link to =\"/\">TableView</Link> </a>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n \r\n    \r\n    <div>\r\n    \r\n      \r\n  \r\n\r\n     \r\n\r\n    \r\n   <Bar data = {{\r\n        labels: ['China', 'Japan', 'Philippines', 'Malaysia', 'Thailand', 'Vietnam'],\r\n        datasets: [{\r\n            label: 'Salary Mean',\r\n            data: [8516.873377976179, 8305.02606060606, 8215.592264150948, 8827.508833333337, 9950.576666666666, 8289.484642857145],\r\n            backgroundColor: [\r\n                'rgb(83, 97, 98)',\r\n                'rgb(94, 139, 126)',\r\n                'rgb(71, 89, 126)',\r\n                'rgb(119, 141, 169)',\r\n                'rgb(121, 163, 177)',\r\n                'rgb(92, 103, 125)'\r\n            ],\r\n            borderColor: [\r\n                'rgb(66, 70, 66)',\r\n                'rgb(47, 93, 98)',\r\n                'rgb(41, 59, 95)',\r\n                'rgb(65, 90, 119)',\r\n                'rgb(69, 98, 104)',\r\n                'rgb(52, 58, 64)'\r\n            ],\r\n            borderWidth: 1\r\n        \r\n    },\r\n  ],}}\r\n  height={400}\r\n  width={600}\r\n  options={{\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks:{\r\n            beginAtZero: true,\r\n          },\r\n        }\r\n      ]\r\n    }\r\n  }}\r\n/>\r\n   \r\n\r\n</div>\r\n       \r\n</div> )\r\n \r\n }\r\n  export default Chart;","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Tabledata from './components/Tabledata';\nimport Chart from './components/Chart';\n\n\n\nfunction App() {\n\n \n\n  return (\n    <div className=\"App\">\n      \n      <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Tabledata}  exact />\n        <Route path=\"/Chart\" component={Chart}  />\n      </Switch>\n   </BrowserRouter>\n   </div>\n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n\n    document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}